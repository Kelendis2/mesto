(()=>{"use strict";var __webpack_modules__={469:()=>{eval("\n;// CONCATENATED MODULE: ./src/utils/constants.js\n//Формы\nconst formEditProfile = document.querySelector('.form_type_profile');\nconst formAddCard = document.querySelector('.form_type_content');\nconst formAvatar = document.querySelector('.form_type_avatar');\n\n//Теплейт\nconst cardTemplate = document.querySelector('.card-template');\n\n//Кнопки\nconst buttonEditProfile = document.querySelector('.profile__edit-button');\nconst buttonAddContentCard = document.querySelector('.profile__add-button');\nconst buttonAddAvatar = document.querySelector('.profile__button-avatar');\n\n// Назначение объектов\nconst options = {\n  formSelector: '.form',\n  inputSelector: '.form__input',\n  inputSectionSelector: '.form__field',\n  inputInvalidClass: 'form__input_invalid',\n  submitButtonSelector: '.form__button-save',\n  inactiveButtonClass: 'form__button-save_inactive',\n  errorSelector: '.form__input-error',\n  errorClass: 'form__input-error_active'\n};\n;// CONCATENATED MODULE: ./src/components/Popup.js\nclass Popup {\n  constructor(popupSelector) {\n    this._popup = document.querySelector(popupSelector);\n    this._buttonClose = this._popup.querySelector('.popup__close-button');\n  }\n  // Открытие попапа\n  open() {\n    this._popup.classList.add('popup_opened');\n    document.addEventListener('keydown', this._handleEscClose);\n  }\n  //Закрытие попапа\n  close() {\n    this._popup.classList.remove('popup_opened');\n    document.removeEventListener('keydown', this._handleEscClose);\n  }\n  //Закрытие по Еsс\n  _handleEscClose = evt => {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  };\n  //Закрытие по оверлей\n  _handleCloseOverlay(evt) {\n    if (evt.target.classList.contains('popup_opened')) {\n      this.close();\n    }\n  }\n  //Слушатели\n  setEventListeners() {\n    this._buttonClose.addEventListener('click', () => {\n      this.close();\n    });\n    this._popup.addEventListener('mousedown', this._handleCloseOverlay.bind(this));\n  }\n}\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\n\nclass PopupWithForm extends Popup {\n  constructor(popupSelector, _ref) {\n    let {\n      submitCallback\n    } = _ref;\n    super(popupSelector);\n    this._submitCallback = submitCallback;\n    this._form = this._popup.querySelector('.form');\n    this._inputs = Array.from(this._form.querySelectorAll('.form__input'));\n    this._buttonSubmit = this._popup.querySelector('.form__button-save');\n    this.defaultText = this._buttonSubmit.textContent;\n  }\n  _getInputValues() {\n    this._formValues = {};\n    this._inputs.forEach(input => {\n      this._formValues[input.name] = input.value;\n    });\n    return this._formValues;\n  }\n  setInputValues(userData) {\n    this._inputs.forEach(input => {\n      input.value = userData[input.name];\n    });\n  }\n  // Метод отображения загрузки\n  renderLoading(isLoading, loadingText) {\n    if (isLoading) {\n      this._buttonSubmit.textContent = loadingText;\n    } else {\n      this._buttonSubmit.textContent = this.defaultText;\n    }\n  }\n  setEventListeners() {\n    super.setEventListeners();\n    this._form.addEventListener(\"submit\", evt => {\n      evt.preventDefault();\n      this._submitCallback(this._getInputValues());\n    });\n  }\n  close() {\n    super.close();\n    this._form.reset();\n  }\n}\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nclass UserInfo {\n  constructor(_ref) {\n    let {\n      profileNameSelector,\n      profileInfoSelector,\n      profileAvatarSelector\n    } = _ref;\n    this._userName = document.querySelector(profileNameSelector);\n    this._userInfo = document.querySelector(profileInfoSelector);\n    this._userAvatar = document.querySelector(profileAvatarSelector);\n  }\n  getUserInfo() {\n    return {\n      name: this._userName.textContent,\n      about: this._userInfo.textContent,\n      avatar: this._userAvatar.src\n    };\n  }\n  setUserInfo(_ref2) {\n    let {\n      name,\n      about,\n      avatar\n    } = _ref2;\n    this._userName.textContent = name;\n    this._userInfo.textContent = about;\n    this._userAvatar.src = avatar;\n  }\n}\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\n\nclass PopupWithImage extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n    this._popupImg = this._popup.querySelector('.popup__photo-zoom');\n    this._popupTitle = this._popup.querySelector('.popup__copyright');\n  }\n  open(name, link) {\n    super.open();\n    this._popupTitle.textContent = name;\n    this._popupImg.alt = name;\n    this._popupImg.src = link;\n  }\n  close() {\n    super.close();\n  }\n}\n;// CONCATENATED MODULE: ./src/components/Section.js\nclass Section {\n  constructor(_ref) {\n    let {\n      items,\n      renderer\n    } = _ref;\n    this._renderer = renderer;\n    this._container = document.querySelector('.element');\n  }\n  addItem(element) {\n    this._container.append(element);\n  }\n  addItemPrepend(element) {\n    this._container.prepend(element);\n  }\n  rendersItem(items) {\n    items.forEach(item => {\n      this._renderer(item);\n    });\n  }\n}\n;// CONCATENATED MODULE: ./src/components/Card.js\nclass Card {\n  constructor(data, templateSelector, handleCardClick, handleTrashClick, handleToggleLike, userId) {\n    this._link = data.link;\n    this._name = data.name;\n    this._alt = data.name;\n    this.likes = data.likes;\n    this._likesCounter = data.likes.length;\n    this.cardId = data._id;\n    this._userId = userId;\n    this._ownerId = data.owner._id;\n    this._handleCardClick = handleCardClick;\n    this._templateSelector = templateSelector;\n    this._handleTrashClick = handleTrashClick;\n    this._handleToggleLike = handleToggleLike;\n  }\n  //Поиск и клонирование темплейта\n  _getTemplate() {\n    return this._templateSelector.content.cloneNode(true).children[0];\n  }\n  //Метод генерации карточки\n  generateCard() {\n    this._element = this._getTemplate();\n    //Находим фото и записываем значения\n    this._cardImage = this._element.querySelector('.element__photo');\n    this._cardImage.src = this._link;\n    this._cardImage.alt = this._name;\n    //Находим подпись к фото и прописываем значение\n    this._title = this._element.querySelector('.element__title');\n    this._title.textContent = this._name;\n    //Находим кнопки\n    this._buttonTrash = this._element.querySelector('.element__trash');\n    this._likeButton = this._element.querySelector('.element__like');\n    //Находим лайки\n    this._counterLikes = this._element.querySelector('.element__like-quantity');\n    this._counterLikes.textContent = this._likesCounter;\n\n    //Устанавливаем слушатель\n    this._setEventListners();\n\n    // Установка активного лайка с сервера\n    if (this.isLiked(this.likes)) {\n      this._likeButton.classList.add('element__like_activ');\n    }\n\n    //Проверка пользователя для кнопки корзины\n    if (this._ownerId !== this._userId) {\n      this._buttonTrash.remove();\n    }\n\n    //Возвращаем готовый элемент\n    return this._element;\n  }\n  isLiked(likes) {\n    return likes.some(like => {\n      return like._id === this._userId;\n    });\n  }\n  toggleLike(_ref) {\n    let {\n      likes\n    } = _ref;\n    this.likes = likes;\n    this._likeButton.classList.toggle('element__like_activ');\n    this._counterLikes.textContent = likes.length;\n  }\n\n  //Удаление карточки\n  removeCard() {\n    this._element.remove();\n    this._element = null;\n  }\n  _handleOpenPopup() {\n    this._handleCardClick(this._name, this._link);\n  }\n  //Слушатели\n  _setEventListners() {\n    this._buttonTrash.addEventListener('click', () => {\n      this._handleTrashClick();\n    });\n    this._likeButton.addEventListener('click', () => {\n      this._handleToggleLike();\n    });\n    this._cardImage.addEventListener('click', () => {\n      this._handleOpenPopup();\n    });\n  }\n}\n;\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nclass FormValidator {\n  constructor(options, form) {\n    this._form = form;\n    this._options = options;\n    this._submitElement = this._form.querySelector(this._options.submitButtonSelector);\n    this._inputs = Array.from(this._form.querySelectorAll(this._options.inputSelector));\n  }\n  _hideError(inputElement) {\n    inputElement.classList.remove(this._options.inputInvalidClass);\n    this._getErrorElement(inputElement).classList.remove(this._options.errorClass);\n    this._getErrorElement(inputElement).textContent = '';\n  }\n  _showError(inputElement) {\n    inputElement.classList.add(this._options.inputInvalidClass);\n    this._getErrorElement(inputElement).classList.add(this._options.errorClass);\n    this._getErrorElement(inputElement).textContent = inputElement.validationMessage;\n  }\n  _enableButton() {\n    this._submitElement.removeAttribute('disabled');\n    this._submitElement.classList.remove(this._options.inactiveButtonClass);\n  }\n  _disabledButton() {\n    this._submitElement.disabled = 'true';\n    this._submitElement.classList.add(this._options.inactiveButtonClass);\n  }\n  _getErrorElement(inputElement) {\n    return this._form.querySelector(`#${inputElement.id}-error`);\n  }\n  _toggleButtonState() {\n    const formIsValid = this._inputs.every(inputElement => inputElement.validity.valid);\n    if (formIsValid) {\n      this._enableButton();\n    } else {\n      this._disabledButton();\n    }\n  }\n  _toggleErrorState(inputElement) {\n    const isValid = inputElement.validity.valid;\n    if (isValid) {\n      this._hideError(inputElement);\n    } else {\n      this._showError(inputElement);\n    }\n  }\n  cleanValidation() {\n    this._toggleButtonState();\n    this._inputs.forEach(inputElement => {\n      this._hideError(inputElement);\n    });\n  }\n  _setEventListeners(form) {\n    this._toggleButtonState();\n    this._inputs.forEach((inputElement, i) => {\n      inputElement.addEventListener('input', () => {\n        this._toggleErrorState(inputElement);\n        this._toggleButtonState();\n      });\n    });\n  }\n  enableValidation() {\n    const form = this._form;\n    this._setEventListeners(form);\n  }\n}\n/* harmony default export */ const components_FormValidator = (FormValidator);\n;// CONCATENATED MODULE: ./src/components/Api.js\nclass Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n  editProfile(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._baseUrl}/users/me `, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getResponseData);\n  }\n  editAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    return fetch(`${this._baseUrl}/users/me/avatar `, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getResponseData);\n  }\n  addCard(_ref4) {\n    let {\n      name,\n      link\n    } = _ref4;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._getResponseData);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n  toggleLike(cardId, isLiked) {\n    if (!isLiked) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(this._getResponseData);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._getResponseData);\n    }\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co./v1/cohort-64',\n  headers: {\n    authorization: '4c274032-0b3e-4759-b4b1-a9d64f1dfaf8',\n    'Content-Type': 'application/json'\n  }\n});\n;// CONCATENATED MODULE: ./src/components/PopupWithConformation.js\n\nclass PopupWithConfirmation extends Popup {\n  constructor(popupSelector, _ref) {\n    let {\n      submitCallback\n    } = _ref;\n    super(popupSelector);\n    this._submitCallback = submitCallback;\n    this._buttonSubmit = this._popup.querySelector('.form__button-save');\n    this.defaultText = this._buttonSubmit.textContent;\n  }\n\n  // Открытие попапа с айди\n  openConfirmation(card) {\n    super.open();\n    this.cardId = card.cardId;\n    this.card = card;\n    this.defaultText = this._buttonSubmit.textContent;\n  }\n  // Метод отображения загрузки\n  renderLoading(isLoading, loadingText) {\n    if (isLoading) {\n      this._buttonSubmit.textContent = loadingText;\n    } else {\n      this._buttonSubmit.textContent = this.defaultText;\n    }\n  }\n\n  // Слушатель\n  setEventListeners() {\n    super.setEventListeners();\n    this._buttonSubmit.addEventListener('click', evt => {\n      evt.preventDefault();\n      this._submitCallback(this);\n    });\n  }\n}\n;// CONCATENATED MODULE: ./src/pages/index.js\n\n\n\n\n\n\n\n\n\n\nlet userId;\n\n// Экземпляр класса профиля\nconst userInfo = new UserInfo({\n  profileNameSelector: '.profile__info-title',\n  profileInfoSelector: '.profile__info-subtitle',\n  profileAvatarSelector: '.profile__avatar'\n});\n//Получение данных с сервера\nPromise.all([api.getProfile(), api.getInitialCards()]).then(_ref => {\n  let [promUser, promCard] = _ref;\n  userId = promUser._id;\n  userInfo.setUserInfo(promUser);\n  cardSection.rendersItem(promCard);\n}).catch(err => console.log(err));\n\n// Отрисовка секции с карточками\nconst cardSection = new Section({\n  items: [],\n  renderer: item => {\n    cardSection.addItem(createCard(item));\n  }\n});\n\n// Экземпляр класса попапа профиля.\nconst userPopup = new PopupWithForm('.popup_type_profile', {\n  submitCallback: values => {\n    userPopup.renderLoading(true, 'Сохранение...');\n    api.editProfile(values).then(res => {\n      userInfo.setUserInfo(res);\n      userPopup.close();\n    }).catch(err => console.log(err)).finally(() => {\n      userPopup.renderLoading(false);\n    });\n  }\n});\nuserPopup.setEventListeners();\nbuttonEditProfile.addEventListener('click', () => {\n  userPopup.open();\n  userPopup.setInputValues(userInfo.getUserInfo());\n});\n\n// Экземпляр класса попапа  Аватара\nconst avatarPopup = new PopupWithForm('.popup_type_avatar', {\n  submitCallback: data => {\n    avatarPopup.renderLoading(true, 'Сохранение...');\n    api.editAvatar(data).then(res => {\n      userInfo.setUserInfo(res);\n      avatarPopup.close();\n    }).catch(err => console.log(err)).finally(() => {\n      avatarPopup.renderLoading(false);\n    });\n  }\n});\navatarPopup.setEventListeners();\nbuttonAddAvatar.addEventListener('click', () => {\n  avatarPopup.open();\n  fromAvatarValidator.cleanValidation();\n});\n\n//Создание карточки\nconst createCard = element => {\n  const cardElement = new Card(element, cardTemplate, handleCardClick, handleTrashClick, handleToggleLike, userId);\n  function handleCardClick(name, link) {\n    popupImage.open(name, link);\n  }\n  function handleTrashClick() {\n    popupConformation.openConfirmation(cardElement);\n  }\n  function handleToggleLike() {\n    api.toggleLike(cardElement.cardId, cardElement.isLiked(cardElement.likes)).then(res => {\n      cardElement.toggleLike(res);\n    }).catch(err => console.log(err));\n  }\n  return cardElement.generateCard();\n};\n\n//Удаляем карточку\nconst popupConformation = new PopupWithConfirmation('.popup_type_trash', {\n  submitCallback: _ref2 => {\n    let {\n      card\n    } = _ref2;\n    popupConformation.renderLoading(true, 'Удаление...');\n    api.deleteCard(card.cardId).then(() => {\n      card.removeCard();\n      popupConformation.close();\n    }).catch(err => console.log(err)).finally(() => {\n      popupConformation.renderLoading(false);\n    });\n  }\n});\npopupConformation.setEventListeners();\n\n//Экземпляр попапа создания карточки\nconst cardPopup = new PopupWithForm('.popup_type_content', {\n  submitCallback: data => {\n    cardPopup.renderLoading(true, 'Сохранение...');\n    api.addCard(data).then(cardElement => {\n      cardSection.addItemPrepend(createCard(cardElement));\n      cardPopup.close();\n    }).catch(err => console.log(err)).finally(() => {\n      cardPopup.renderLoading(false);\n    });\n  }\n});\ncardPopup.setEventListeners();\nbuttonAddContentCard.addEventListener('click', () => {\n  cardPopup.open();\n  fromCardValidator.cleanValidation();\n});\n\n// Создание экзепляра  попапа картинки и открытие его.\nconst popupImage = new PopupWithImage('.popup_type_photo');\npopupImage.setEventListeners();\n\n//Включение валидации\nconst fromCardValidator = new components_FormValidator(options, formAddCard);\nfromCardValidator.enableValidation();\nconst fromProfileValidator = new components_FormValidator(options, formEditProfile);\nfromProfileValidator.enableValidation();\nconst fromAvatarValidator = new components_FormValidator(options, formAvatar);\nfromAvatarValidator.enableValidation();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///469\n")}},__webpack_exports__={};__webpack_modules__[469]()})();